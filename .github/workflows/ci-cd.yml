name: CI/CD Pipeline - Next.js Task Manager

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  NODE_VERSION: '20'

jobs:
  # Build and Test Job
  build-and-test:
    runs-on: ubuntu-latest
    name: 🧪 Build & Test

    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint --if-present

      - name: 🏗️ Build Next.js App
        run: npm run build
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRES_IN: 24h

      - name: 🧪 Run Tests (if available)
        run: npm test --if-present
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRES_IN: 24h

  # Deploy to Vercel (recommended for Next.js)
  deploy-vercel:
    runs-on: ubuntu-latest
    name: 🚀 Deploy to Vercel
    needs: build-and-test
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'

    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v4

      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

  # Alternative: Docker Build & Deploy
  docker-build:
    runs-on: ubuntu-latest
    name: 🐳 Docker Build
    needs: build-and-test
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'

    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Build Docker Image
        run: |
          docker build -t task-manager-nextjs:latest .
          echo "✅ Docker image built successfully"

      # Uncomment below for Docker Hub deployment
      # - name: 🐳 Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      
      # - name: 🚀 Push to Docker Hub
      #   run: |
      #     docker tag task-manager-nextjs:latest ${{ secrets.DOCKER_USERNAME }}/task-manager-nextjs:latest
      #     docker push ${{ secrets.DOCKER_USERNAME }}/task-manager-nextjs:latest